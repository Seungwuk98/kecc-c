// RUN: kecc-opt %s --mem2reg | FileCheck %s


fun i32 @foo () {
init:
  bid: b0
  allocations: 
    %l0:i32:sum
    %l1:i32:i

block b0:
  %b0:i0:unit = store 0:i32 %l0:i32*
  %b0:i1:unit = store 0:i32 %l1:i32*
  j b2()

block b2:
  %b2:i0:i32 = load %l1:i32*
  %b2:i1:u1 = cmp eq %b2:i0:i32 5:i32
  br %b2:i1:u1, b6(), b7()

block b6:
  %b6:i0:i32 = load %l0:i32*
  ret %b6:i0:i32

block b7:
  %b7:i0:i32 = load %l1:i32*
  %b7:i1:u1 = cmp eq %b7:i0:i32 3:i32
  br %b7:i1:u1, b10(), b11()

block b10:
  %b10:i0:i32 = load %l1:i32*
  %b10:i1:i32 = add %b10:i0:i32 1:i32
  %b10:i2:unit = store %b10:i1:i32 %l1:i32*
  j b2()

block b11:
  %b11:i0:i32 = load %l0:i32*
  %b11:i1:i32 = load %l1:i32*
  %b11:i2:i32 = add %b11:i0:i32 %b11:i1:i32
  %b11:i3:unit = store %b11:i2:i32 %l0:i32*
  %b11:i4:i32 = load %l1:i32*
  %b11:i5:i32 = add %b11:i4:i32 1:i32
  %b11:i6:unit = store %b11:i5:i32 %l1:i32*
  j b2()
}
// CHECK: fun i32 @foo () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:
// CHECK-NEXT:     %l0:i32:sum
// CHECK-NEXT:     %l1:i32:i

// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:unit = nop
// CHECK-NEXT:   %b0:i1:unit = nop
// CHECK-NEXT:   j b2(0:i32, 0:i32)

// CHECK-LABEL: block b2:
// CHECK-NEXT:   %b2:p0:i32:sum
// CHECK-NEXT:   %b2:p1:i32:i
// CHECK-NEXT:   %b2:i0:unit = nop
// CHECK-NEXT:   %b2:i1:u1 = cmp eq %b2:p1:i32 5:i32
// CHECK-NEXT:   br %b2:i1:u1, b6(), b7()

// CHECK-LABEL: block b6:
// CHECK-NEXT:   %b6:i0:unit = nop
// CHECK-NEXT:   ret %b2:p0:i32

// CHECK-LABEL: block b7:
// CHECK-NEXT:   %b7:i0:unit = nop
// CHECK-NEXT:   %b7:i1:u1 = cmp eq %b2:p1:i32 3:i32
// CHECK-NEXT:   br %b7:i1:u1, b10(), b11()

// CHECK-LABEL: block b10:
// CHECK-NEXT:   %b10:i0:unit = nop
// CHECK-NEXT:   %b10:i1:i32 = add %b2:p1:i32 1:i32
// CHECK-NEXT:   %b10:i2:unit = nop
// CHECK-NEXT:   j b2(%b2:p0:i32, %b10:i1:i32)

// CHECK-LABEL: block b11:
// CHECK-NEXT:   %b11:i0:unit = nop
// CHECK-NEXT:   %b11:i1:unit = nop
// CHECK-NEXT:   %b11:i2:i32 = add %b2:p0:i32 %b2:p1:i32
// CHECK-NEXT:   %b11:i3:unit = nop
// CHECK-NEXT:   %b11:i4:unit = nop
// CHECK-NEXT:   %b11:i5:i32 = add %b2:p1:i32 1:i32
// CHECK-NEXT:   %b11:i6:unit = nop
// CHECK-NEXT:   j b2(%b11:i2:i32, %b11:i5:i32)
// CHECK-NEXT: }

fun i32 @main () {
init:
  bid: b0
  allocations: 


block b0:
  %b0:i0:i32 = call @foo:[ret:i32 params:()]*()
  %b0:i1:u1 = cmp eq %b0:i0:i32 7:i32
  %b0:i2:i32 = typecast %b0:i1:u1 to i32
  ret %b0:i2:i32
}
// CHECK-LABEL: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:


// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:i32 = call @foo:[ret:i32 params:()]*()
// CHECK-NEXT:   %b0:i1:u1 = cmp eq %b0:i0:i32 7:i32
// CHECK-NEXT:   %b0:i2:i32 = typecast %b0:i1:u1 to i32
// CHECK-NEXT:   ret %b0:i2:i32
// CHECK-NEXT: }
