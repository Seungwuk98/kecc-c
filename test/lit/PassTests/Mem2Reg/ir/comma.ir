// RUN: kecc-test-executor %s --test-return-value=1
// RUN: kecc-opt %s --mem2reg | FileCheck %s


fun i32 @main () {
init:
  bid: b0
  allocations: 
    %l0:i32:y
    %l1:i32:x

block b0:
  %b0:i0:unit = store 2:i32 %l0:i32*
  %b0:i1:i32 = load %l0:i32*
  %b0:i2:i32 = add %b0:i1:i32 2:i32
  %b0:i3:unit = store %b0:i2:i32 %l0:i32*
  %b0:i4:i32 = load %l0:i32*
  %b0:i5:i32 = add %b0:i4:i32 3:i32
  %b0:i6:unit = store %b0:i5:i32 %l1:i32*
  %b0:i7:i32 = load %l1:i32*
  %b0:i8:u1 = cmp eq %b0:i7:i32 7:i32
  %b0:i9:i32 = typecast %b0:i8:u1 to i32
  ret %b0:i9:i32
}
// CHECK: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:
// CHECK-NEXT:     %l0:i32:y
// CHECK-NEXT:     %l1:i32:x

// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:unit = nop
// CHECK-NEXT:   %b0:i1:unit = nop
// CHECK-NEXT:   %b0:i2:i32 = add 2:i32 2:i32
// CHECK-NEXT:   %b0:i3:unit = nop
// CHECK-NEXT:   %b0:i4:unit = nop
// CHECK-NEXT:   %b0:i5:i32 = add %b0:i2:i32 3:i32
// CHECK-NEXT:   %b0:i6:unit = nop
// CHECK-NEXT:   %b0:i7:unit = nop
// CHECK-NEXT:   %b0:i8:u1 = cmp eq %b0:i5:i32 7:i32
// CHECK-NEXT:   %b0:i9:i32 = typecast %b0:i8:u1 to i32
// CHECK-NEXT:   ret %b0:i9:i32
// CHECK-NEXT: }
