// RUN: kecc-test-executor %s --test-return-value=1 
// RUN: keci %s --test-return-value=1
// RUN: kecc-opt %s --mem2reg | FileCheck %s


fun i32 @fibonacci (i32) {
init:
  bid: b0
  allocations: 
    %l0:i32:n

block b0:
  %b0:p0:i32:n
  %b0:i0:unit = store %b0:p0:i32 %l0:i32*
  %b0:i1:i32 = load %l0:i32*
  %b0:i2:u1 = cmp lt %b0:i1:i32 2:i32
  br %b0:i2:u1, b1(), b3()

block b1:
  %b1:i0:i32 = load %l0:i32*
  %b1:i1:i32 = add %b1:i0:i32 2:i32
  %b1:i2:unit = store %b1:i1:i32 %l0:i32*
  j b3()

block b3:
  %b3:i0:i32 = load %l0:i32*
  %b3:i1:i32 = sub %b3:i0:i32 2:i32
  %b3:i2:i32 = call @fibonacci:[ret:i32 params:(i32)]*(%b3:i1:i32)
  %b3:i3:i32 = load %l0:i32*
  %b3:i4:i32 = sub %b3:i3:i32 1:i32
  %b3:i5:i32 = call @fibonacci:[ret:i32 params:(i32)]*(%b3:i4:i32)
  %b3:i6:i32 = add %b3:i2:i32 %b3:i5:i32
  ret %b3:i6:i32
}
// CHECK: fun i32 @fibonacci (i32) {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:
// CHECK-NEXT:     %l0:i32:n

// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:p0:i32:n
// CHECK-NEXT:   %b0:i0:unit = nop
// CHECK-NEXT:   %b0:i1:unit = nop
// CHECK-NEXT:   %b0:i2:u1 = cmp lt %b0:p0:i32 2:i32
// CHECK-NEXT:   br %b0:i2:u1, b1(), b3(%b0:p0:i32)

// CHECK-LABEL: block b1:
// CHECK-NEXT:   %b1:i0:unit = nop
// CHECK-NEXT:   %b1:i1:i32 = add %b0:p0:i32 2:i32
// CHECK-NEXT:   %b1:i2:unit = nop
// CHECK-NEXT:   j b3(%b1:i1:i32)

// CHECK-LABEL: block b3:
// CHECK-NEXT:   %b3:p0:i32:n
// CHECK-NEXT:   %b3:i0:unit = nop
// CHECK-NEXT:   %b3:i1:i32 = sub %b3:p0:i32 2:i32
// CHECK-NEXT:   %b3:i2:i32 = call @fibonacci:[ret:i32 params:(i32)]*(%b3:i1:i32)
// CHECK-NEXT:   %b3:i3:unit = nop
// CHECK-NEXT:   %b3:i4:i32 = sub %b3:p0:i32 1:i32
// CHECK-NEXT:   %b3:i5:i32 = call @fibonacci:[ret:i32 params:(i32)]*(%b3:i4:i32)
// CHECK-NEXT:   %b3:i6:i32 = add %b3:i2:i32 %b3:i5:i32
// CHECK-NEXT:   ret %b3:i6:i32
// CHECK-NEXT: }

fun i32 @main () {
init:
  bid: b0
  allocations: 


block b0:
  ret 1:i32
}
// CHECK-LABEL: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:


// CHECK-LABEL: block b0:
// CHECK-NEXT:   ret 1:i32
// CHECK-NEXT: }
