// RUN: kecc-test-executor %s --test-return-value=1
// RUN: kecc-opt %s --mem2reg | FileCheck %s


fun i32 @main () {
init:
  bid: b0
  allocations: 
    %l0:i32:y
    %l1:i32:x
    %l2:i32:t0

block b0:
  %b0:i0:unit = store 1:i32 %l0:i32*
  %b0:i1:unit = store 0:i32 %l1:i32*
  %b0:i2:i32 = load %l1:i32*
  %b0:i3:i32 = load %l0:i32*
  %b0:i4:u1 = cmp eq %b0:i2:i32 %b0:i3:i32
  br %b0:i4:u1, b1(), b2()

block b1:
  %b1:i0:unit = store 2:i32 %l2:i32*
  j b3()

block b2:
  %b2:i0:unit = store 5:i32 %l2:i32*
  j b3()

block b3:
  %b3:i0:i32 = load %l2:i32*
  %b3:i1:u1 = cmp eq %b3:i0:i32 5:i32
  %b3:i2:i32 = typecast %b3:i1:u1 to i32
  ret %b3:i2:i32
}
// CHECK: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:
// CHECK-NEXT:     %l0:i32:y
// CHECK-NEXT:     %l1:i32:x
// CHECK-NEXT:     %l2:i32:t0

// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:unit = nop
// CHECK-NEXT:   %b0:i1:unit = nop
// CHECK-NEXT:   %b0:i2:unit = nop
// CHECK-NEXT:   %b0:i3:unit = nop
// CHECK-NEXT:   %b0:i4:u1 = cmp eq 0:i32 1:i32
// CHECK-NEXT:   br %b0:i4:u1, b1(), b2()

// CHECK-LABEL: block b1:
// CHECK-NEXT:   %b1:i0:unit = nop
// CHECK-NEXT:   j b3(2:i32)

// CHECK-LABEL: block b2:
// CHECK-NEXT:   %b2:i0:unit = nop
// CHECK-NEXT:   j b3(5:i32)

// CHECK-LABEL: block b3:
// CHECK-NEXT:   %b3:p0:i32:t0
// CHECK-NEXT:   %b3:i0:unit = nop
// CHECK-NEXT:   %b3:i1:u1 = cmp eq %b3:p0:i32 5:i32
// CHECK-NEXT:   %b3:i2:i32 = typecast %b3:i1:u1 to i32
// CHECK-NEXT:   ret %b3:i2:i32
// CHECK-NEXT: }
