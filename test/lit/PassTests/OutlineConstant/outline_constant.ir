// RUN: kecc-opt %s --canonicalize-constant --outline-constant | FileCheck %s

fun i32 @outline0 () {
// CHECK: fun i32 @outline0 ()
init:
  bid: b0
  allocations:
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:

block b0:
// CHECK-LABEL: block b0:
  // CHECK-NEXT: %b0:i0:i32 = outline 1:i32
  %b0:i0:i32 = add 0:i32 1:i32
  // CHECK-NEXT: %b0:i1:i32 = add 0:i32 %b0:i0:i32
  ret %b0:i0:i32
  // CHECK-NEXT: ret %b0:i1:i32
}


fun i32 @outline1 () {
// CHECK-LABEL: fun i32 @outline1 ()
init:
  bid: b0
  allocations:
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:

block b0:
// CHECK-LABEL: block b0:
  // CHECK-NEXT: %b0:i0:i1 = outline 0:i1
  br 0:i1, b1(), b2()
  // CHECK-NEXT: br %b0:i0:i1, b1(), b2() 

block b1:
// CHECK-LABEL: block b1:
  // CHECK-NEXT: %b1:i0:i32 = outline 0:i32
  j b3(0:i32)
  // CHECK-NEXT: j b3(%b1:i0:i32)

block b2:
// CHECK-LABEL: block b2:
  // CHECK-NEXT: %b2:i0:i32 = outline 1:i32 
  j b3(1:i32)
  // CHECK-NEXT: j b3(%b2:i0:i32)

block b3:
// CHECK-LABEL: block b3:
  %b3:p0:i32
  // CHECK-NEXT: %b3:p0:i32
  ret %b3:p0:i32
  // CHECK-NEXT: ret %b3:p0:i32
}
