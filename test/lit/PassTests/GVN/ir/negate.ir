// RUN: kecc-test-executor %s --test-return-value=1
// RUN: keci %s --test-return-value=1
// RUN: kecc-opt %s --canonicalize-constant --gvn | FileCheck %s
// RUN: kecc-test-executor %s --translate-passes="--canonicalize-constant --gvn" --test-return-value=1
// RUN: kecc-opt %s --canonicalize-constant --gvn | keci --test-return-value=1


fun i32 @foo (i32, i32, i32) {
init:
  bid: b0
  allocations: 


block b0:
  %b0:p0:i32:x
  %b0:p1:i32:y
  %b0:p2:i32:z
  %b0:i0:u1 = cmp eq %b0:p0:i32 %b0:p1:i32
  %b0:i1:u1 = negate %b0:i0:u1
  br %b0:i1:u1, b1(), b2()

block b1:
  ret %b0:p1:i32

block b2:
  ret %b0:p2:i32
}
// CHECK: fun i32 @foo (i32, i32, i32) {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:


// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:p0:i32:x
// CHECK-NEXT:   %b0:p1:i32:y
// CHECK-NEXT:   %b0:p2:i32:z
// CHECK-NEXT:   %b0:i0:u1 = cmp eq %b0:p0:i32 %b0:p1:i32
// CHECK-NEXT:   %b0:i1:u1 = negate %b0:i0:u1
// CHECK-NEXT:   br %b0:i1:u1, b1(), b2()

// CHECK-LABEL: block b1:
// CHECK-NEXT:   ret %b0:p1:i32

// CHECK-LABEL: block b2:
// CHECK-NEXT:   ret %b0:p2:i32
// CHECK-NEXT: }

fun i32 @main () {
init:
  bid: b0
  allocations: 


block b0:
  %b0:i0:i32 = minus 1:i32
  %b0:i1:i32 = call @foo:[ret:i32 params:(i32, i32, i32)]*(0:i32, 1:i32, %b0:i0:i32)
  %b0:i2:u1 = cmp eq %b0:i1:i32 1:i32
  %b0:i3:i32 = typecast %b0:i2:u1 to i32
  ret %b0:i3:i32
}
// CHECK-LABEL: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:


// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:i32 = minus 1:i32
// CHECK-NEXT:   %b0:i1:i32 = call @foo:[ret:i32 params:(i32, i32, i32)]*(0:i32, 1:i32, %b0:i0:i32)
// CHECK-NEXT:   %b0:i2:u1 = cmp eq %b0:i1:i32 1:i32
// CHECK-NEXT:   %b0:i3:i32 = typecast %b0:i2:u1 to i32
// CHECK-NEXT:   ret %b0:i3:i32
// CHECK-NEXT: }
