// RUN: kecc-test-executor %s --test-return-value=1
// RUN: keci %s --test-return-value=1
// RUN: kecc-opt %s --canonicalize-constant --gvn | FileCheck %s
// RUN: kecc-test-executor %s --translate-passes="--canonicalize-constant --gvn" --test-return-value=1
// RUN: kecc-opt %s --canonicalize-constant --gvn | keci --test-return-value=1

struct Foo : { x:i32 }
var i32 @nonce = 1
// CHECK: struct Foo : { x:i32 }
// CHECK-LABEL: var i32 @nonce = 1

fun struct Foo @f () {
init:
  bid: b0
  allocations: 
    %l0:struct Foo:x

block b0:
  %b0:i0:i32* = getelementptr %l0:struct Foo* offset 0:i64
  %b0:i1:i32 = load @nonce:i32*
  %b0:i2:unit = store %b0:i1:i32 %b0:i0:i32*
  %b0:i3:struct Foo = load %l0:struct Foo*
  ret %b0:i3:struct Foo
}
// CHECK-LABEL: fun struct Foo @f () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:
// CHECK-NEXT:     %l0:struct Foo:x

// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:i32* = getelementptr %l0:struct Foo* offset 0:i64
// CHECK-NEXT:   %b0:i1:i32 = load @nonce:i32*
// CHECK-NEXT:   %b0:i2:unit = store %b0:i1:i32 %b0:i0:i32*
// CHECK-NEXT:   %b0:i3:struct Foo = load %l0:struct Foo*
// CHECK-NEXT:   ret %b0:i3:struct Foo
// CHECK-NEXT: }

fun i32 @main () {
init:
  bid: b0
  allocations: 
    %l0:struct Foo:t0

block b0:
  %b0:i0:struct Foo = call @f:[ret:struct Foo params:()]*()
  %b0:i1:unit = store %b0:i0:struct Foo %l0:struct Foo*
  %b0:i2:i32* = getelementptr %l0:struct Foo* offset 0:i64
  %b0:i3:i32 = load %b0:i2:i32*
  ret %b0:i3:i32
}
// CHECK-LABEL: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:
// CHECK-NEXT:     %l0:struct Foo:t0

// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:struct Foo = call @f:[ret:struct Foo params:()]*()
// CHECK-NEXT:   %b0:i1:unit = store %b0:i0:struct Foo %l0:struct Foo*
// CHECK-NEXT:   %b0:i2:i32* = getelementptr %l0:struct Foo* offset 0:i64
// CHECK-NEXT:   %b0:i3:i32 = load %b0:i2:i32*
// CHECK-NEXT:   ret %b0:i3:i32
// CHECK-NEXT: }
