// RUN: kecc-test-executor %s --test-return-value=1
// RUN: keci %s --test-return-value=1
// RUN: kecc-opt %s --canonicalize-constant --gvn | FileCheck %s
// RUN: kecc-test-executor %s --translate-passes="--canonicalize-constant --gvn" --test-return-value=1
// RUN: kecc-opt %s --canonicalize-constant --gvn | keci --test-return-value=1


fun i32 @main () {
init:
  bid: b0
  allocations: 


block b0:
  %b0:i0:u64 = typecast 1:i32 to u64
  %b0:i1:u1 = cmp eq 1:u64 %b0:i0:u64
  br %b0:i1:u1, b4(), b5()

block b1:
  %b1:i0:u64 = typecast 80:i32 to u64
  %b1:i1:u1 = cmp eq 80:u64 %b1:i0:u64
  j b3(%b1:i1:u1)

block b2:
  j b3(0:u1)

block b3:
  %b3:p0:u1:t1
  %b3:i0:i32 = typecast %b3:p0:u1 to i32
  ret %b3:i0:i32

block b4:
  %b4:i0:u64 = typecast 4:i32 to u64
  %b4:i1:u1 = cmp eq 4:u64 %b4:i0:u64
  j b6(%b4:i1:u1)

block b5:
  j b6(0:u1)

block b6:
  %b6:p0:u1:t0
  br %b6:p0:u1, b1(), b2()
}
// CHECK: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT:   bid: b0
// CHECK-NEXT:   allocations:


// CHECK-LABEL: block b0:
// CHECK-NEXT:   %b0:i0:u64 = typecast 1:i32 to u64
// CHECK-NEXT:   %b0:i1:u1 = cmp eq 1:u64 %b0:i0:u64
// CHECK-NEXT:   br %b0:i1:u1, b4(), b5()

// CHECK-LABEL: block b1:
// CHECK-NEXT:   %b1:i0:u64 = typecast 80:i32 to u64
// CHECK-NEXT:   %b1:i1:u1 = cmp eq 80:u64 %b1:i0:u64
// CHECK-NEXT:   j b3(%b1:i1:u1)

// CHECK-LABEL: block b2:
// CHECK-NEXT:   j b3(0:u1)

// CHECK-LABEL: block b3:
// CHECK-NEXT:   %b3:p0:u1:t1
// CHECK-NEXT:   %b3:i0:i32 = typecast %b3:p0:u1 to i32
// CHECK-NEXT:   ret %b3:i0:i32

// CHECK-LABEL: block b4:
// CHECK-NEXT:   %b4:i0:u64 = typecast 4:i32 to u64
// CHECK-NEXT:   %b4:i1:u1 = cmp eq 4:u64 %b4:i0:u64
// CHECK-NEXT:   j b6(%b4:i1:u1)

// CHECK-LABEL: block b5:
// CHECK-NEXT:   j b6(0:u1)

// CHECK-LABEL: block b6:
// CHECK-NEXT:   %b6:p0:u1:t0
// CHECK-NEXT:   br %b6:p0:u1, b1(), b2()
// CHECK-NEXT: }
