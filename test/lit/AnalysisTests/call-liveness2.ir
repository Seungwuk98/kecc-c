// RUN: kecc-opt %s --dump-analysis=live-range | FileCheck %s --check-prefix=LR
// RUN: kecc-opt %s --dump-analysis=call-liveness | FileCheck %s --check-prefix=CLN

fun i32 @callee() 

fun i32 @test_func() {
init:
  bid: b0
  allocations:
    %l0:i32
  
block b0:
  %b0:i0:i32 = add 0:i32 1:i32 
  %b0:i1:i32 = call @test_func:[ret:i32 params:()]*()
  %b0:i2:i32 = add 0:i32 %b0:i0:i32
  %b0:i3:i32 = call @test_func:[ret:i32 params:()]*()
  %b0:i4:i32 = load %l0:i32*
  %b0:i5:i32 = call @test_func:[ret:i32 params:()]*()
  ret %b0:i3:i32
}

// LR: Live Range Analysis dump:
// LR-LABEL: fun i32 @callee ()

// LR-LABEL: fun i32 @test_func () {
// LR-NEXT: init:
// LR-NEXT:   bid: b0
// LR-NEXT:   allocations:
// LR-NEXT:     L0:i32

// LR-LABEL: block b0:
// LR-NEXT:   L1:i32 = add 0:i32 1:i32
// LR-NEXT:   L2:i32 = call @test_func:[ret:i32 params:()]*()
// LR-NEXT:   L3:i32 = add 0:i32 L1:i32
// LR-NEXT:   L4:i32 = call @test_func:[ret:i32 params:()]*()
// LR-NEXT:   L5:i32 = load L0:i32*
// LR-NEXT:   L6:i32 = call @test_func:[ret:i32 params:()]*()
// LR-NEXT:   ret L4:i32
// LR-NEXT: }

// CLN: Call Liveness dump:
// CLN-NEXT: Call instructions in function @test_func:
// CLN-NEXT: %b0:i1:i32 = call @test_func:[ret:i32 params:()]*() <-- live in: L0 L1
// CLN-NEXT: %b0:i3:i32 = call @test_func:[ret:i32 params:()]*() <-- live in: L0
// CLN-NEXT: %b0:i5:i32 = call @test_func:[ret:i32 params:()]*() <-- live in: L4

