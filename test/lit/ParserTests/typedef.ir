// RUN: kecc-opt %s -action=parse | FileCheck %s

fun i32 @main () {
init:
  bid: b0
  allocations: 
    %l0:i32:a
    %l1:i32*const:b

block b0:
  %b0:i0:unit = store 0:i32 %l0:i32*
  %b0:i1:i32 = load %l0:i32*
  %b0:i2:unit = store %l0:i32* %l1:i32*const*
  %b0:i3:i32* = load %l1:i32*const*
  %b0:i4:unit = store 1:i32 %b0:i3:i32*
  %b0:i5:i32* = load %l1:i32*const*
  %b0:i6:i32 = load %b0:i5:i32*
  ret %b0:i6:i32

block b1:
  ret 0:i32
}


// CHECK: fun i32 @main () {
// CHECK-NEXT: init:
// CHECK-NEXT: bid: b0
// CHECK-NEXT: allocations:
// CHECK-NEXT: %l0:i32:a
// CHECK-NEXT: %l1:i32*const:b

// CHECK-LABEL: block b0:
// CHECK-NEXT: %b0:i0:unit = store 0:i32 %l0:i32*
// CHECK-NEXT: %b0:i1:i32 = load %l0:i32*
// CHECK-NEXT: %b0:i2:unit = store %l0:i32* %l1:i32*const*
// CHECK-NEXT: %b0:i3:i32* = load %l1:i32*const*
// CHECK-NEXT: %b0:i4:unit = store 1:i32 %b0:i3:i32*
// CHECK-NEXT: %b0:i5:i32* = load %l1:i32*const*
// CHECK-NEXT: %b0:i6:i32 = load %b0:i5:i32*
// CHECK-NEXT: ret %b0:i6:i32

// CHECK-LABEL: block b1:
// CHECK-NEXT: ret 0:i32
// CHECK-NEXT: }

